{"version":3,"sources":["../../../../public/js/libs/mustache.js"],"names":["defineMustache","global","factory","exports","nodeName","define","amd","Mustache","mustacheFactory","mustache","objectToString","Object","prototype","toString","isArray","Array","isArrayPolyfill","object","call","isFunction","typeStr","obj","escapeRegExp","string","replace","hasProperty","propName","regExpTest","RegExp","test","testRegExp","re","nonSpaceRe","isWhitespace","entityMap","escapeHtml","String","fromEntityMap","s","whiteRe","spaceRe","equalsRe","curlyRe","tagRe","parseTemplate","template","tags","sections","tokens","spaces","hasTag","nonSpace","stripSpace","length","pop","openingTagRe","closingTagRe","closingCurlyRe","compileTags","tagsToCompile","split","Error","scanner","Scanner","start","type","value","chr","token","openSection","eos","pos","scanUntil","i","valueLength","charAt","push","scan","nestTokens","squashTokens","squashedTokens","lastToken","numTokens","nestedTokens","collector","section","tail","match","index","substring","search","Context","view","parentContext","cache","parent","lookup","name","hasOwnProperty","context","names","lookupHit","indexOf","Writer","clearCache","parse","render","partials","renderTokens","originalTemplate","buffer","symbol","undefined","renderSection","renderInverted","renderPartial","unescapedValue","escapedValue","rawValue","self","subRender","j","slice","escape","version","defaultWriter","TypeError","to_html","send","result"],"mappings":"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","file":"mustache.js","sourcesContent":["/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false Mustache: true*/\n\n(function defineMustache (global, factory) {\n  if (typeof exports === 'object' && exports && typeof exports.nodeName !== 'string') {\n    factory(exports); // CommonJS\n  } else if (typeof define === 'function' && define.amd) {\n    define(['exports'], factory); // AMD\n  } else {\n    global.Mustache = {};\n    factory(global.Mustache); // script, wsh, asp\n  }\n}(this, function mustacheFactory (mustache) {\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n          } else {\n            nonSpace = true;\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n')\n            stripSpace();\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      token = [ type, value, start, scanner.pos ];\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          value = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           **/\n          while (value != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = hasProperty(value, names[index]);\n\n            value = value[names[index++]];\n          }\n        } else {\n          value = context.view[name];\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit)\n          break;\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.cache;\n    var tokens = cache[template];\n\n    if (tokens == null)\n      tokens = cache[template] = parseTemplate(template, tags);\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   */\n  Writer.prototype.render = function render (template, view, partials) {\n    var tokens = this.parse(template);\n    var context = (view instanceof Context) ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null)\n      return this.renderTokens(this.parse(value), context, partials, value);\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  mustache.name = 'mustache.js';\n  mustache.version = '2.3.0';\n  mustache.tags = [ '{{', '}}' ];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer.\n   */\n  mustache.render = function render (template, view, partials) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.,\n  /*eslint-disable */ // eslint wants camel cased function name\n  mustache.to_html = function to_html (template, view, partials, send) {\n    /*eslint-enable*/\n\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n}));\n"]}