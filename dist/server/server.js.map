{"version":3,"sources":["../../server/server.js"],"names":["path","require","http","express","socketIO","publicPath","join","__dirname","port","process","env","PORT","app","server","createServer","io","use","static","on","socket","console","log","emit","from","text","createdAt","Date","getTime","broadcast","newMsg","listen"],"mappings":";;AAAA;;;;AAIA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,UAAUF,QAAQ,SAAR,CAAhB;AACA,IAAMG,WAAWH,QAAQ,WAAR,CAAjB;;AAEA,IAAMI,aAAcL,KAAKM,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAApB;AACA,IAAMC,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,IAAIC,MAAMT,SAAV;AACA,IAAIU,SAASX,KAAKY,YAAL,CAAkBF,GAAlB,CAAb;AACA,IAAIG,KAAKX,SAASS,MAAT,CAAT;;AAEAD,IAAII,GAAJ,CAAQb,QAAQc,MAAR,CAAeZ,UAAf,CAAR;;AAEAU,GAAGG,EAAH,CAAM,YAAN,EAAoB,UAACC,MAAD,EAAY;AAC5BC,YAAQC,GAAR,CAAY,oBAAZ;;AAEAF,WAAOG,IAAP,CAAY,YAAZ,EAA0B,EAAE;AACxBC,cAAM,OADgB;AAEtBC,cAAM,uBAFgB;AAGtBC,mBAAW,IAAIC,IAAJ,GAAWC,OAAX;AAHW,KAA1B;;AAMAR,WAAOS,SAAP,CAAiBN,IAAjB,CAAsB,YAAtB,EAAoC,EAAE;AAClCC,cAAM,OAD0B;AAEhCC,cAAM,iBAF0B;AAGhCC,mBAAW,IAAIC,IAAJ,GAAWC,OAAX;AAHqB,KAApC;;AAMAR,WAAOD,EAAP,CAAU,eAAV,EAA2B,UAACW,MAAD,EAAY;AACnCT,gBAAQC,GAAR,CAAY,eAAZ,EAA6BQ,MAA7B;AACAd,WAAGO,IAAH,CAAQ,YAAR,EAAsB,EAAG;AACrBC,kBAAMM,OAAON,IADK;AAElBC,kBAAMK,OAAOL,IAFK;AAGlBC,uBAAU,IAAIC,IAAJ,GAAWC,OAAX;AAHQ,SAAtB;AAKA;AACA;AACA;AACA;AACA;AACH,KAZD;;AAcAR,WAAOD,EAAP,CAAU,YAAV,EAAwB,YAAM;AAC1BE,gBAAQC,GAAR,CAAY,uBAAZ;AACH,KAFD;AAGH,CAhCD;;AAkCAR,OAAOiB,MAAP,CAActB,IAAd,EAAoB,YAAM;AACtBY,YAAQC,GAAR,yBAAkCb,IAAlC;AACH,CAFD","file":"server.js","sourcesContent":["/**\r\n * Created by csche on 03.08.2017.\r\n */\r\n\r\nconst path = require(\"path\");\r\nconst http = require(\"http\");\r\nconst express = require(\"express\");\r\nconst socketIO = require(\"socket.io\");\r\n\r\nconst publicPath =  path.join(__dirname, \"../public\");\r\nconst port = process.env.PORT || 3000;\r\nlet app = express();\r\nlet server = http.createServer(app);\r\nlet io = socketIO(server);\r\n\r\napp.use(express.static(publicPath));\r\n\r\nio.on(\"connection\", (socket) => {\r\n    console.log(\"New user connected\");\r\n\r\n    socket.emit(\"newMessage\", { // msg only to the joiner\r\n        from: \"Admin\",\r\n        text: \"Welcome to this chat!\",\r\n        createdAt: new Date().getTime()\r\n    });\r\n\r\n    socket.broadcast.emit(\"newMessage\", { // msg to all but joiner\r\n        from: \"Admin\",\r\n        text: \"New user joined\",\r\n        createdAt: new Date().getTime()\r\n    });\r\n\r\n    socket.on(\"createMessage\", (newMsg) => {\r\n        console.log(\"createMessage\", newMsg);\r\n        io.emit(\"newMessage\", {  // msg to all connected clients\r\n            from: newMsg.from,\r\n            text: newMsg.text,\r\n            createdAt:new Date().getTime()\r\n        });\r\n        // socket.broadcast.emit(\"newMessage\",{\r\n        //     from: newMsg.from,\r\n        //     text: newMsg.text,\r\n        //     createdAt:new Date().getTime()\r\n        // });\r\n    });\r\n\r\n    socket.on(\"disconnect\", () => {\r\n        console.log(\"User was disconnected\");\r\n    });\r\n});\r\n\r\nserver.listen(port, () => {\r\n    console.log(`Started up at port ${port}`);\r\n});"]}